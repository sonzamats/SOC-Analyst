# Threat Intelligence Enrichment Pipeline
# This pipeline enriches incoming logs with threat intelligence data

filter {
  # IP enrichment - Source IP
  if [source][ip] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      user => "${ELASTIC_USER:elastic}"
      password => "${ELASTIC_PASSWORD}"
      index => "threat-intel-indicators-*"
      query => "indicator.type:ipv4 AND indicator.value:%{[source][ip]}"
      fields => { 
        "[threat][feed][name]" => "[source][threat][feed][name]"
        "[threat][indicator][type]" => "[source][threat][indicator][type]"
        "[threat][indicator][confidence]" => "[source][threat][indicator][confidence]"
        "[threat][indicator][description]" => "[source][threat][indicator][description]"
      }
      tag_on_failure => ["_elasticsearch_lookup_failure_source_ip"]
    }
  }
  
  # IP enrichment - Destination IP
  if [destination][ip] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      user => "${ELASTIC_USER:elastic}"
      password => "${ELASTIC_PASSWORD}"
      index => "threat-intel-indicators-*"
      query => "indicator.type:ipv4 AND indicator.value:%{[destination][ip]}"
      fields => { 
        "[threat][feed][name]" => "[destination][threat][feed][name]"
        "[threat][indicator][type]" => "[destination][threat][indicator][type]"
        "[threat][indicator][confidence]" => "[destination][threat][indicator][confidence]"
        "[threat][indicator][description]" => "[destination][threat][indicator][description]"
      }
      tag_on_failure => ["_elasticsearch_lookup_failure_destination_ip"]
    }
  }
  
  # Domain enrichment
  if [dns][question][name] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      user => "${ELASTIC_USER:elastic}"
      password => "${ELASTIC_PASSWORD}"
      index => "threat-intel-indicators-*"
      query => "indicator.type:domain AND indicator.value:%{[dns][question][name]}"
      fields => { 
        "[threat][feed][name]" => "[dns][threat][feed][name]"
        "[threat][indicator][type]" => "[dns][threat][indicator][type]"
        "[threat][indicator][confidence]" => "[dns][threat][indicator][confidence]"
        "[threat][indicator][description]" => "[dns][threat][indicator][description]"
      }
      tag_on_failure => ["_elasticsearch_lookup_failure_dns"]
    }
  }
  
  # URL enrichment
  if [url][original] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      user => "${ELASTIC_USER:elastic}"
      password => "${ELASTIC_PASSWORD}"
      index => "threat-intel-indicators-*"
      query => "indicator.type:url AND indicator.value:%{[url][original]}"
      fields => { 
        "[threat][feed][name]" => "[url][threat][feed][name]"
        "[threat][indicator][type]" => "[url][threat][indicator][type]"
        "[threat][indicator][confidence]" => "[url][threat][indicator][confidence]"
        "[threat][indicator][description]" => "[url][threat][indicator][description]"
      }
      tag_on_failure => ["_elasticsearch_lookup_failure_url"]
    }
  }
  
  # File hash enrichment - use SHA256 if available, fall back to SHA1, then MD5
  if [file][hash] {
    if [file][hash][sha256] {
      elasticsearch {
        hosts => ["elasticsearch:9200"]
        user => "${ELASTIC_USER:elastic}"
        password => "${ELASTIC_PASSWORD}"
        index => "threat-intel-indicators-*"
        query => "indicator.type:sha256 AND indicator.value:%{[file][hash][sha256]}"
        fields => { 
          "[threat][feed][name]" => "[file][threat][feed][name]"
          "[threat][indicator][type]" => "[file][threat][indicator][type]"
          "[threat][indicator][confidence]" => "[file][threat][indicator][confidence]"
          "[threat][indicator][description]" => "[file][threat][indicator][description]"
        }
        tag_on_failure => ["_elasticsearch_lookup_failure_file_hash_sha256"]
      }
    } else if [file][hash][sha1] {
      elasticsearch {
        hosts => ["elasticsearch:9200"]
        user => "${ELASTIC_USER:elastic}"
        password => "${ELASTIC_PASSWORD}"
        index => "threat-intel-indicators-*"
        query => "indicator.type:sha1 AND indicator.value:%{[file][hash][sha1]}"
        fields => { 
          "[threat][feed][name]" => "[file][threat][feed][name]"
          "[threat][indicator][type]" => "[file][threat][indicator][type]"
          "[threat][indicator][confidence]" => "[file][threat][indicator][confidence]"
          "[threat][indicator][description]" => "[file][threat][indicator][description]"
        }
        tag_on_failure => ["_elasticsearch_lookup_failure_file_hash_sha1"]
      }
    } else if [file][hash][md5] {
      elasticsearch {
        hosts => ["elasticsearch:9200"]
        user => "${ELASTIC_USER:elastic}"
        password => "${ELASTIC_PASSWORD}"
        index => "threat-intel-indicators-*"
        query => "indicator.type:md5 AND indicator.value:%{[file][hash][md5]}"
        fields => { 
          "[threat][feed][name]" => "[file][threat][feed][name]"
          "[threat][indicator][type]" => "[file][threat][indicator][type]"
          "[threat][indicator][confidence]" => "[file][threat][indicator][confidence]"
          "[threat][indicator][description]" => "[file][threat][indicator][description]"
        }
        tag_on_failure => ["_elasticsearch_lookup_failure_file_hash_md5"]
      }
    }
  }
  
  # Add threat match flag and tag if any enrichment was successful
  if [source][threat] or [destination][threat] or [dns][threat] or [url][threat] or [file][threat] {
    mutate {
      add_field => { "threat_match" => "true" }
      add_tag => [ "threat_intelligence_match" ]
    }
    
    # Add severity based on confidence score
    if [source][threat][indicator][confidence] and [source][threat][indicator][confidence] >= 80 {
      mutate { add_field => { "event.severity" => "high" } }
    } else if [destination][threat][indicator][confidence] and [destination][threat][indicator][confidence] >= 80 {
      mutate { add_field => { "event.severity" => "high" } }
    } else if [dns][threat][indicator][confidence] and [dns][threat][indicator][confidence] >= 80 {
      mutate { add_field => { "event.severity" => "high" } }
    } else if [url][threat][indicator][confidence] and [url][threat][indicator][confidence] >= 80 {
      mutate { add_field => { "event.severity" => "high" } }
    } else if [file][threat][indicator][confidence] and [file][threat][indicator][confidence] >= 80 {
      mutate { add_field => { "event.severity" => "high" } }
    } else if [source][threat] or [destination][threat] or [dns][threat] or [url][threat] or [file][threat] {
      mutate { add_field => { "event.severity" => "medium" } }
    }
  }
} 